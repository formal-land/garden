(* Generated by Garden *)
Require Import Garden.Garden.

(* Template signals *)
Module SMTHash1Signals.
  Record t : Set := {
    key : F.t;
    value : F.t;
    out : F.t;
  }.
End SMTHash1Signals.

(* Template body *)
Definition SMTHash1 : M.t (BlockUnit.t Empty_set) :=
  (* Signal Input *)
  do~ M.declare_signal "key" [[ ([] : list F.t) ]] in
  (* Signal Input *)
  do~ M.declare_signal "value" [[ ([] : list F.t) ]] in
  (* Signal Output *)
  do~ M.declare_signal "out" [[ ([] : list F.t) ]] in
  (* Component *)
  do~ M.declare_component "h" in
  do~ M.substitute_var "h" [[ M.call_function ~(| "MultiMiMC7", [ 2; 91 ] |) ]] in
  do~ M.substitute_var "h" [[ M.var (| "key" |) ]] in
  do~ M.substitute_var "h" [[ M.var (| "value" |) ]] in
  do~ M.substitute_var "h" [[ 1 ]] in
  do~ M.substitute_var "out" [[ M.var_access (| "h", [Access.Component "out"] |) ]] in
  M.pure BlockUnit.Tt.

(* Template signals *)
Module SMTHash2Signals.
  Record t : Set := {
    L : F.t;
    R : F.t;
    out : F.t;
  }.
End SMTHash2Signals.

(* Template body *)
Definition SMTHash2 : M.t (BlockUnit.t Empty_set) :=
  (* Signal Input *)
  do~ M.declare_signal "L" [[ ([] : list F.t) ]] in
  (* Signal Input *)
  do~ M.declare_signal "R" [[ ([] : list F.t) ]] in
  (* Signal Output *)
  do~ M.declare_signal "out" [[ ([] : list F.t) ]] in
  (* Component *)
  do~ M.declare_component "h" in
  do~ M.substitute_var "h" [[ M.call_function ~(| "MultiMiMC7", [ 2; 91 ] |) ]] in
  do~ M.substitute_var "h" [[ M.var (| "L" |) ]] in
  do~ M.substitute_var "h" [[ M.var (| "R" |) ]] in
  do~ M.substitute_var "h" [[ 0 ]] in
  do~ M.substitute_var "out" [[ M.var_access (| "h", [Access.Component "out"] |) ]] in
  M.pure BlockUnit.Tt.
